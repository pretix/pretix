# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-27 09:11
from __future__ import unicode_literals

import django.db.models.deletion
import oauth2_provider.generators
import oauth2_provider.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('pretixbase', '0092_auto_20180511_1224'),
    ]

    operations = [
        migrations.CreateModel(
            name='OAuthAccessToken',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires', models.DateTimeField()),
                ('scope', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OAuthApplication',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_id',
                 models.CharField(db_index=True, default=oauth2_provider.generators.generate_client_id, max_length=100,
                                  unique=True)),
                ('redirect_uris', models.TextField(blank=True, help_text='Allowed URIs list, space separated',
                                                   validators=[oauth2_provider.validators.validate_uris])),
                ('client_type',
                 models.CharField(choices=[('confidential', 'Confidential'), ('public', 'Public')], max_length=32)),
                ('authorization_grant_type', models.CharField(
                    choices=[('authorization-code', 'Authorization code'), ('implicit', 'Implicit'),
                             ('password', 'Resource owner password-based'),
                             ('client-credentials', 'Client credentials')], max_length=32)),
                ('client_secret',
                 models.CharField(blank=True, db_index=True, default=oauth2_provider.generators.generate_client_secret,
                                  max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('skip_authorization', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OAuthGrant',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('expires', models.DateTimeField()),
                ('redirect_uri', models.CharField(max_length=255)),
                ('scope', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('application',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pretixbase.OAuthApplication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OAuthRefreshToken',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('revoked', models.DateTimeField(null=True)),
                ('access_token',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                      related_name='refresh_token', to='pretixbase.OAuthAccessToken')),
                ('application',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pretixbase.OAuthApplication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='oauthrefreshtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='pretixbase_oauthrefreshtoken', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='oauthgrant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pretixbase_oauthgrant',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='oauthapplication',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='pretixbase_oauthapplication', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='oauthaccesstoken',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='pretixbase.OAuthApplication'),
        ),
        migrations.AddField(
            model_name='oauthaccesstoken',
            name='source_refresh_token',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                       related_name='refreshed_access_token', to='pretixbase.OAuthRefreshToken'),
        ),
        migrations.AddField(
            model_name='oauthaccesstoken',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='pretixbase_oauthaccesstoken', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='oauthrefreshtoken',
            unique_together=set([('token', 'revoked')]),
        ),
        migrations.AddField(
            model_name='oauthapplication',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='oauthaccesstoken',
            name='organizers',
            field=models.ManyToManyField(to='pretixbase.Organizer'),
        ),
        migrations.AddField(
            model_name='oauthgrant',
            name='organizers',
            field=models.ManyToManyField(to='pretixbase.Organizer'),
        ),
    ]
